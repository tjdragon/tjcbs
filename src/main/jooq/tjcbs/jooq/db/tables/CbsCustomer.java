/*
 * This file is generated by jOOQ.
 */
package tjcbs.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tjcbs.jooq.db.App;
import tjcbs.jooq.db.Keys;
import tjcbs.jooq.db.tables.records.CbsCustomerRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CbsCustomer extends TableImpl<CbsCustomerRecord> {

    private static final long serialVersionUID = 1684873126;

    /**
     * The reference instance of <code>APP.CBS_CUSTOMER</code>
     */
    public static final CbsCustomer CBS_CUSTOMER = new CbsCustomer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CbsCustomerRecord> getRecordType() {
        return CbsCustomerRecord.class;
    }

    /**
     * The column <code>APP.CBS_CUSTOMER.NINO</code>.
     */
    public final TableField<CbsCustomerRecord, String> NINO = createField("NINO", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>APP.CBS_CUSTOMER.FIRST_NAME</code>.
     */
    public final TableField<CbsCustomerRecord, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>APP.CBS_CUSTOMER.LAST_NAME</code>.
     */
    public final TableField<CbsCustomerRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>APP.CBS_CUSTOMER.DOB</code>.
     */
    public final TableField<CbsCustomerRecord, Integer> DOB = createField("DOB", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>APP.CBS_CUSTOMER.PRIMARY_EMAIL</code>.
     */
    public final TableField<CbsCustomerRecord, String> PRIMARY_EMAIL = createField("PRIMARY_EMAIL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>APP.CBS_CUSTOMER</code> table reference
     */
    public CbsCustomer() {
        this(DSL.name("CBS_CUSTOMER"), null);
    }

    /**
     * Create an aliased <code>APP.CBS_CUSTOMER</code> table reference
     */
    public CbsCustomer(String alias) {
        this(DSL.name(alias), CBS_CUSTOMER);
    }

    /**
     * Create an aliased <code>APP.CBS_CUSTOMER</code> table reference
     */
    public CbsCustomer(Name alias) {
        this(alias, CBS_CUSTOMER);
    }

    private CbsCustomer(Name alias, Table<CbsCustomerRecord> aliased) {
        this(alias, aliased, null);
    }

    private CbsCustomer(Name alias, Table<CbsCustomerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CbsCustomer(Table<O> child, ForeignKey<O, CbsCustomerRecord> key) {
        super(child, key, CBS_CUSTOMER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CbsCustomerRecord> getPrimaryKey() {
        return Keys.CBS_CUSTOMER_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CbsCustomerRecord>> getKeys() {
        return Arrays.<UniqueKey<CbsCustomerRecord>>asList(Keys.CBS_CUSTOMER_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CbsCustomer as(String alias) {
        return new CbsCustomer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CbsCustomer as(Name alias) {
        return new CbsCustomer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CbsCustomer rename(String name) {
        return new CbsCustomer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CbsCustomer rename(Name name) {
        return new CbsCustomer(name, null);
    }
}
