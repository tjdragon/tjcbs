/*
 * This file is generated by jOOQ.
 */
package tjcbs.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tjcbs.jooq.db.App;
import tjcbs.jooq.db.Keys;
import tjcbs.jooq.db.tables.records.CbsAccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CbsAccount extends TableImpl<CbsAccountRecord> {

    private static final long serialVersionUID = -1710310625;

    /**
     * The reference instance of <code>APP.CBS_ACCOUNT</code>
     */
    public static final CbsAccount CBS_ACCOUNT = new CbsAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CbsAccountRecord> getRecordType() {
        return CbsAccountRecord.class;
    }

    /**
     * The column <code>APP.CBS_ACCOUNT.ID</code>.
     */
    public final TableField<CbsAccountRecord, String> ID = createField("ID", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>APP.CBS_ACCOUNT.ALLOCATED_AMOUNT</code>.
     */
    public final TableField<CbsAccountRecord, Double> ALLOCATED_AMOUNT = createField("ALLOCATED_AMOUNT", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>APP.CBS_ACCOUNT.CURRENT_AMOUNT</code>.
     */
    public final TableField<CbsAccountRecord, Double> CURRENT_AMOUNT = createField("CURRENT_AMOUNT", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * Create a <code>APP.CBS_ACCOUNT</code> table reference
     */
    public CbsAccount() {
        this(DSL.name("CBS_ACCOUNT"), null);
    }

    /**
     * Create an aliased <code>APP.CBS_ACCOUNT</code> table reference
     */
    public CbsAccount(String alias) {
        this(DSL.name(alias), CBS_ACCOUNT);
    }

    /**
     * Create an aliased <code>APP.CBS_ACCOUNT</code> table reference
     */
    public CbsAccount(Name alias) {
        this(alias, CBS_ACCOUNT);
    }

    private CbsAccount(Name alias, Table<CbsAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private CbsAccount(Name alias, Table<CbsAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CbsAccount(Table<O> child, ForeignKey<O, CbsAccountRecord> key) {
        super(child, key, CBS_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CbsAccountRecord> getPrimaryKey() {
        return Keys.CBS_ACCOUNT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CbsAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<CbsAccountRecord>>asList(Keys.CBS_ACCOUNT_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CbsAccount as(String alias) {
        return new CbsAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CbsAccount as(Name alias) {
        return new CbsAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CbsAccount rename(String name) {
        return new CbsAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CbsAccount rename(Name name) {
        return new CbsAccount(name, null);
    }
}
