/*
 * This file is generated by jOOQ.
 */
package tjcbs.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tjcbs.jooq.db.App;
import tjcbs.jooq.db.Keys;
import tjcbs.jooq.db.tables.records.CbsCustomerEmailsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CbsCustomerEmails extends TableImpl<CbsCustomerEmailsRecord> {

    private static final long serialVersionUID = -1974169862;

    /**
     * The reference instance of <code>APP.CBS_CUSTOMER_EMAILS</code>
     */
    public static final CbsCustomerEmails CBS_CUSTOMER_EMAILS = new CbsCustomerEmails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CbsCustomerEmailsRecord> getRecordType() {
        return CbsCustomerEmailsRecord.class;
    }

    /**
     * The column <code>APP.CBS_CUSTOMER_EMAILS.NINO</code>.
     */
    public final TableField<CbsCustomerEmailsRecord, String> NINO = createField("NINO", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>APP.CBS_CUSTOMER_EMAILS.EMAIL</code>.
     */
    public final TableField<CbsCustomerEmailsRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>APP.CBS_CUSTOMER_EMAILS</code> table reference
     */
    public CbsCustomerEmails() {
        this(DSL.name("CBS_CUSTOMER_EMAILS"), null);
    }

    /**
     * Create an aliased <code>APP.CBS_CUSTOMER_EMAILS</code> table reference
     */
    public CbsCustomerEmails(String alias) {
        this(DSL.name(alias), CBS_CUSTOMER_EMAILS);
    }

    /**
     * Create an aliased <code>APP.CBS_CUSTOMER_EMAILS</code> table reference
     */
    public CbsCustomerEmails(Name alias) {
        this(alias, CBS_CUSTOMER_EMAILS);
    }

    private CbsCustomerEmails(Name alias, Table<CbsCustomerEmailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CbsCustomerEmails(Name alias, Table<CbsCustomerEmailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CbsCustomerEmails(Table<O> child, ForeignKey<O, CbsCustomerEmailsRecord> key) {
        super(child, key, CBS_CUSTOMER_EMAILS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CbsCustomerEmailsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CbsCustomerEmailsRecord, ?>>asList(Keys.SQL181029115214280);
    }

    public CbsCustomer cbsCustomer() {
        return new CbsCustomer(this, Keys.SQL181029115214280);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CbsCustomerEmails as(String alias) {
        return new CbsCustomerEmails(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CbsCustomerEmails as(Name alias) {
        return new CbsCustomerEmails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CbsCustomerEmails rename(String name) {
        return new CbsCustomerEmails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CbsCustomerEmails rename(Name name) {
        return new CbsCustomerEmails(name, null);
    }
}
